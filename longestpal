class Solution:
    def longestPalindrome(self, s: str) -> str:
        pal=''
        for i in range(0,len(s)):
            x=Solution.findOddPal(s,i)
            y=Solution.findEvenPal(s,i)
            #print(x)
            if len(pal)<len(x):
                pal=x
            if len(pal)<len(y):
                pal=y
        return pal
                
        
    def findOddPal(s,n):
        p1=n
        p2=n
        while p1>-1 and p2<len(s):
            if p2==len(s)-1 or p1==0 or s[p1-1]!=s[p2+1]:
                    return s[p1:p2+1]
            p1-=1
            p2+=1

        return s[p1:p2+1]
    
    def findEvenPal(s,n):
        p1=n
        p2=n+1
        if n+1<len(s) and s[n]!=s[n+1]:
            return ''
        while p1>-1 and p2<len(s):
            if p2==len(s)-1 or p1==0 or s[p1-1]!=s[p2+1]:
                    return s[p1:p2+1]
            p1-=1
            p2+=1

        return s[p1:p2+1]
